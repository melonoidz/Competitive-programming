{
	"Print to console1": {
		"prefix": "temp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define rep(i,n) for(int i=0; i<(n); i++)",
			"#define rep2(i,x,n) for(int i=x; i<(n); i++)",
			"#define ALL(n) begin(n),end(n)",
			"#define INF ((1<<30)-1)",
			"#define LINF (1LL<<60)",
			"#define EPS (1e-10)",
			"typedef long long Int;",
			"typedef pair<Int, Int> P;",
			"typedef pair<int, int> pint;",
			"struct cww{cww(){ios::sync_with_stdio(false);cin.tie(0);}}star;",
			"int main()",
			"{",
			"    cin.tie(0);",
			"    ios::sync_with_stdio(false);",
			"    return 0;",
			"}"
		],
		"description": "template"
	},
	"Print to console2": {
		"prefix": "dijkstra",
		"body": [
			"vector<P> edge[1100000];",
			"vector<Int> dijkstra(Int start){",
			"priority_queue<P,vector<P>,greater<P>> pq;",
			"vector<Int> dist(V,LINF);",
			"dist[start]=0;",
			"pq.push(P(dist[start],start));",
			"while (!pq.empty()){",
			"auto p =pq.top(); pq.pop();",
			"Int d= p.first;",
			"int from= p.second;",
			"if(dist[from]<d) continue;",
			"for(auto nxt: edge[from]){",
			"Int to= nxt.first;",
			"Int c= nxt.second;",
			"if(dist[from]+c <dist[to]){",
			"dist[to]=dist[from]+c;",
			"pq.push(P(dist[to],to));",
			"}",
			"}",
			"}",
			"return dist;",
			"}"
		],
		"description": "dijkstra"
	},
	"Print to console3": {
		"prefix": "modinv",
		"body": [
			"Int modinv(Int a, Int m) { // (a/b mod.MOD) a*modinv(b,MOD)%MOD",  
			"Int b = m, u = 1, v = 0;",
				"while (b) {",
					"Int t = a / b;",
					"a -= t * b; swap(a, b);",
					"u -= t * v; swap(u, v);",
				"}",
				"u %= m;",
				"if (u < 0) u += m;",
				"return u;",
			"}",
		],
		"description": "modinv"
	}
}